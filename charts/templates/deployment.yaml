apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "charts.fullname" . }}
  labels:
    {{- include "charts.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "charts.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "charts.selectorLabels" . | nindent 8 }}
    spec:
      volumes:
      - name: persistent-storage
        persistentVolumeClaim:
          claimName: {{ .Values.persistence.name }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      initContainers:
        - name: init-container
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          env:
            - name: DJANGO_SECRET_KEY
              value: {{ .Values.django.secretKey }}
            - name: DATABASE_NAME
              value: {{ .Values.django.databaseName }}
          command: ["/bin/sh", "-c", "python manage.py migrate"]
          volumeMounts:
          - name: persistent-storage
            mountPath: /app
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          env:
            - name: DJANGO_SECRET_KEY
              value: {{ .Values.django.secretKey }}
            - name: DATABASE_NAME
              value: {{ .Values.django.databaseName }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8000
              protocol: TCP
          volumeMounts:
          - name: persistent-storage
            mountPath: /app
        # livenessProbe:
        #   httpGet:
        #     path: /ht
        #     port: http
        #     initialDelaySeconds: 5
        #     periodSeconds: 5
        # readinessProbe:
        #   httpGet:
        #     path: /ht
        #     port: http
        #     initialDelaySeconds: 5
        #     periodSeconds: 5
